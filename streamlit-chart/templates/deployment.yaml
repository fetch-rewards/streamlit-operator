apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: streamlit
  labels:
    app: {{ .Values.deployment.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      serviceAccountName: streamlit-serviceaccount
      containers:
      - name: git-sync
        image: registry.k8s.io/git-sync:v3.1.3
        volumeMounts:
          - name: code
            mountPath: /tmp/code
          - name: git-ssh-key
            mountPath: /etc/git-secret
        env:
          - name: GIT_SYNC_REPO
            value: "{repo}"
          - name: GIT_SYNC_BRANCH
            value: "{branch}"
          - name: GIT_SYNC_ROOT
            value: /tmp/code
          - name: GIT_SYNC_DEST
            value: "repo"
          - name: GIT_SYNC_SSH
            value: "true"
          - name: GIT_SSH_KEY_FILE
            value: /etc/git-secret/ssh-privatekey
          - name: GIT_KNOWN_HOSTS
            value: "false"
          - name: GIT_SYNC_WAIT
            value: "60"
      - name: streamlit
#        TODO: Replace with new image
        image: "{{ .Values.deployment.image.app }}:{{ .Values.deployment.image.version}}"
        env:
            - name: IN_HUB
              value: "True"
            - name: CODE_DIR
              value: "repo/{code_dir}"
            - name: ENTRYPOINT
              value: "main.py"
            #TODO: We probably want to make some of these secrets opt-in, AFAIK the app won't work if they're not defined
            - name: SNOWFLAKE_USER
              valueFrom:
                secretKeyRef:
                  name: snowflake-credentials
                  key: snowflake-user
            - name: SNOWFLAKE_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: snowflake-credentials
                    key: snowflake-password
            - name: PYPI_USER
              valueFrom:
                  secretKeyRef:
                    name: pypi-credentials
                    key: pypi-user
            - name: PYPI_PASSWORD
              valueFrom:
                  secretKeyRef:
                      name: pypi-credentials
                      key: pypi-password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                  secretKeyRef:
                    name: aws-credentials
                    key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                  secretKeyRef:
                      name: aws-credentials
                      key: aws-secret-access-key

        ports:
        - containerPort: 80
        volumeMounts:
          - name: code
            mountPath: /app
      volumes:
        - name: code
          emptyDir: "" # TODO: Change to a different dir 
        - name: git-ssh-key
          secret:
            secretName: fetchlit-key